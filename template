#include<bits/stdc++.h>
using namespace std;
using namespace __gnu_pbds;
//=========================
//Macros:::
#define fo(i,n) for(i=0;i<n;i++)
#define Fo(i,k,n) for(i=k;k<n?i<n:i>n;k<n?i+=1:i-=1)
#define w while
#define ll long long
#define re(a) cin>>a
#define re2(a,b) cin>>a>>b
#define re3(a,b,c) cin>>a>>b>>c
#define re4(a,b,c,d) cin>>a>>b>>c>>d
#define re5(a,b,c,d,e) cin>>a>>b>>c>>d>>e
#define re6(a,b,c,d,e,f) cin>>a>>b>>c>>d>>e>>f
#define pr(a) cout<<a<<endl
#define pr2(a,b) cout<<a<<" "<<b<<endl;
#define pr3(a,b,c) cout<<a<<" "<<b<<" "<<c<<endl
#define pr4(a,b,c,d) cout<<a<<" "<<b<<" "<<c<<" "<<d<<endl
#define pr5(a,b,c,d,e) cout<<a<<" "<<b<<" "<<c<<" "<<d<<" "<<e<<endl
#define pr6(a,b,c,d,e,f) cout<<a<<" "<<b<<" "<<c<<" "<<d<<" "<<e<<" "<<f<<endl
#define deb(x) cerr << #x << "=" << x << endl
#define deb2(x, y) cerr << #x << "=" << x << "," << #y << "=" << y << endl
#define debv(v) cerr<< #v << "="; for(auto x: v) cerr<<x<<" "; cerr<<endl;
#define pb push_back
#define mp make_pair
#define F first
#define S second
#define all(x) x.begin(), x.end()
#define rall(x) x.rbegin(), x.rend()
#define clr(x) memset(x, 0, sizeof(x))
#define sortall(x) sort(all(x))
#define rsortall(x) sort(rall(x))
#define getunique(v) {sort(v.begin(), v.end()); v.erase(unique(v.begin(), v.end()), v.end());}
#define tr(x, a) for(auto x = a.begin(); x != a.end(); x++)
#define PI 3.1415926535897932384626
#define pinff LLONG_MAX
#define ninff LLONG_MIN
#define sz(a) a.size()
#define revec(v) fo(i,n) re(v[i]);
typedef pair<ll, ll>  pl;
typedef vector<ll>    vl;
typedef vector<pl>    vpl;
typedef vector<vl>    vvl;
typedef tree<int,null_type,less<int>,rb_tree_tag,
tree_order_statistics_node_update> ordered_set;
const int mod = 1000000007;
const int N = 3e5, M = N;
//=====
mt19937_64 rang(chrono::high_resolution_clock::now().time_since_epoch().count());
int rng(int lim) {
  uniform_int_distribution<int> uid(0,lim-1);
  return uid(rang);
}
//====
//vector<vector<pair<ll,ll>>> g;
void solve(){
  bool f1=0,f2=0,f3=0,f4=0;
  ll sm=0,ans=0,val,cur,last,n,k;
  string s;
  map<ll,ll> mp;
  set<ll> st;
  ll i,j;
  
  
  
}
//=========================
//Change cin>>t to t=1 if only one test case is given::::
int main() {
    auto start_time = std::chrono::high_resolution_clock::now();
    ios_base::sync_with_stdio(0), cin.tie(0), cout.tie(0);
    srand(chrono::high_resolution_clock::now().time_since_epoch().count());
    cout<<setprecision(15)<<fixed;
    int tt; 
    tt=1;
    cin>>tt;
    w(tt--) {
      solve();
    }
    auto end_time = std::chrono::high_resolution_clock::now();
    auto duration = std::chrono::duration_cast<std::chrono::milliseconds>(end_time - start_time);
    // cout<<"Running time: "<< duration.count() << "milliseconds"<<endl;
    return 0;
}
